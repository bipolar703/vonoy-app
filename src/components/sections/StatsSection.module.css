.statsSection {
  background-color: rgb(15, 30, 50); /* Darker background as requested */
  color: white;
  padding: 4rem 0; /* Reduced padding for more compact design */
  position: relative;
  overflow: hidden;
  opacity: 0; /* Start hidden for scroll reveal animation */
}

/* Grid lines removed as requested */

.accentCircle1 {
  position: absolute;
  top: -10%;
  right: -5%;
  width: 500px;
  height: 500px;
  border-radius: 50%;
  background: radial-gradient(
    circle,
    rgba(61, 213, 152, 0.15) 0%,
    rgba(61, 213, 152, 0.08) 40%,
    rgba(61, 213, 152, 0) 70%
  );
  filter: blur(40px);
  opacity: 0.6;
  animation: pulse-glow 8s infinite alternate ease-in-out;
}

.accentCircle2 {
  position: absolute;
  bottom: -20%;
  left: -10%;
  width: 600px;
  height: 600px;
  border-radius: 50%;
  background: radial-gradient(
    circle,
    rgba(10, 109, 194, 0.2) 0%,
    rgba(10, 109, 194, 0.08) 40%,
    rgba(10, 109, 194, 0) 70%
  );
  filter: blur(60px);
  opacity: 0.5;
  animation: pulse-glow 10s infinite alternate-reverse ease-in-out;
}

.accentCircle3 {
  position: absolute;
  top: 40%;
  left: 30%;
  width: 300px;
  height: 300px;
  border-radius: 50%;
  background: radial-gradient(
    circle,
    rgba(255, 255, 255, 0.05) 0%,
    rgba(255, 255, 255, 0.02) 40%,
    rgba(255, 255, 255, 0) 70%
  );
  filter: blur(30px);
  opacity: 0.3;
  animation: float-subtle 15s infinite alternate ease-in-out;
}

@keyframes pulse-glow {
  0% {
    opacity: 0.3;
    transform: scale(1);
  }
  100% {
    opacity: 0.6;
    transform: scale(1.1);
  }
}

@keyframes float-subtle {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(30px, -20px);
  }
}

.container {
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 1.5rem;
  position: relative;
  z-index: 2;
}

.contentLayout {
  display: flex;
  flex-direction: column;
  gap: 3rem;
}

@media (min-width: 1024px) {
  .contentLayout {
    flex-direction: row;
    align-items: center;
  }
}

.textContent {
  flex: 1;
}

.statsAnimationContainer {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 300px;
}

/* Modern stats visualization */
.statsVisualization {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.visualizationCircle {
  width: 220px;
  height: 220px;
  border-radius: 50%;
  background: linear-gradient(135deg, rgba(61, 213, 152, 0.15), rgba(10, 109, 194, 0.15));
  border: 1px solid rgba(255, 255, 255, 0.15);
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 0 40px rgba(61, 213, 152, 0.25);
  animation: pulse 6s infinite alternate ease-in-out;
}

.visualizationCircle::before {
  content: '';
  position: absolute;
  width: 170px;
  height: 170px;
  border-radius: 50%;
  border: 1px dashed rgba(255, 255, 255, 0.25);
  animation: rotate 30s linear infinite;
}

.visualizationCircle::after {
  content: '';
  position: absolute;
  width: 120px;
  height: 120px;
  border-radius: 50%;
  border: 1px solid rgba(255, 255, 255, 0.1);
  background: radial-gradient(circle, rgba(61, 213, 152, 0.05) 0%, rgba(10, 109, 194, 0.05) 100%);
  animation: pulse 4s infinite alternate-reverse ease-in-out;
}

.visualizationCircle::after {
  content: '';
  position: absolute;
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(61, 213, 152, 0.2) 0%, rgba(10, 109, 194, 0.1) 70%);
  filter: blur(10px);
  animation: glow 3s infinite alternate ease-in-out;
}

.visualizationLines {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
}

.visualizationLine {
  position: absolute;
  top: 50%;
  left: 50%;
  height: 1px;
  background: linear-gradient(90deg, rgba(61, 213, 152, 0.7), rgba(61, 213, 152, 0));
  transform-origin: left center;
}

.visualizationLine:nth-child(1) {
  width: 150px;
  transform: rotate(30deg);
  animation: lineGlow 3s infinite alternate ease-in-out;
}

.visualizationLine:nth-child(2) {
  width: 180px;
  transform: rotate(150deg);
  animation: lineGlow 4s infinite alternate-reverse ease-in-out;
}

.visualizationLine:nth-child(3) {
  width: 120px;
  transform: rotate(270deg);
  animation: lineGlow 5s infinite alternate ease-in-out;
}

.visualizationDots {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
}

.visualizationDot {
  position: absolute;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: #3dd598;
  box-shadow: 0 0 15px rgba(61, 213, 152, 0.8), 0 0 5px rgba(255, 255, 255, 0.5) inset;
  z-index: 3;
}

.visualizationDot:nth-child(1) {
  top: 30%;
  left: 20%;
  animation: dotPulse 3s infinite alternate ease-in-out;
}

.visualizationDot:nth-child(2) {
  top: 70%;
  left: 25%;
  animation: dotPulse 4s infinite alternate-reverse ease-in-out;
}

.visualizationDot:nth-child(3) {
  top: 40%;
  right: 20%;
  animation: dotPulse 5s infinite alternate ease-in-out;
}

.visualizationDot:nth-child(4) {
  top: 60%;
  right: 25%;
  animation: dotPulse 3.5s infinite alternate-reverse ease-in-out;
}

.visualizationDot:nth-child(5) {
  top: 20%;
  right: 40%;
  animation: dotPulse 4.5s infinite alternate ease-in-out;
}

@keyframes pulse {
  0% { transform: scale(1); }
  100% { transform: scale(1.05); }
}

@keyframes rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes glow {
  0% { opacity: 0.5; }
  100% { opacity: 0.8; }
}

@keyframes lineGlow {
  0% { opacity: 0.3; }
  100% { opacity: 0.7; }
}

@keyframes dotPulse {
  0% { transform: scale(1); opacity: 0.7; }
  100% { transform: scale(1.5); opacity: 0.3; }
}

.header {
  text-align: center;
  margin-bottom: 3rem;
}

@media (min-width: 1024px) {
  .header {
    text-align: left;
  }
}

.headerTitle {
  font-size: 2.5rem;
  font-weight: 800;
  margin-bottom: 1rem;
  display: inline-block;
  position: relative;
  color: white;
}

.headerUnderline {
  position: absolute;
  bottom: -0.5rem;
  left: 0;
  width: 60%;
  height: 0.25rem;
  background: linear-gradient(to right, #3dd598, #0a6dc2);
  border-radius: 9999px;
  animation: slideIn 1.5s ease forwards;
  transform-origin: left;
}

@keyframes slideIn {
  0% {
    transform: scaleX(0);
  }
  100% {
    transform: scaleX(1);
  }
}

.headerDescription {
  max-width: 36rem;
  line-height: 1.7;
  color: rgba(255, 255, 255, 0.8);
  margin: 0 auto;
}

@media (min-width: 1024px) {
  .headerDescription {
    margin: 0;
  }
}

.statsGrid {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 1rem; /* Reduced gap for more compact design */
  margin-bottom: 2rem; /* Reduced margin for more compact design */
}

@media (min-width: 640px) {
  .statsGrid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (min-width: 1024px) {
  .statsGrid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
    margin-bottom: 0;
  }
}

.statCardWrapper {
  background-color: rgb(25, 45, 70); /* Slightly darker card background */
  border-radius: 1rem;
  overflow: hidden;
  height: 100%;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.statCardWrapper:hover {
  transform: translateY(-5px);
  box-shadow: 0 12px 28px rgba(0, 0, 0, 0.25);
}

.statCard {
  background-color: rgb(25, 45, 70); /* Slightly darker card background */
  padding: 1.5rem; /* Slightly increased padding for better spacing */
  text-align: center;
  position: relative;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  opacity: 0; /* Start hidden for stagger animation */
  transform: translateY(20px); /* Start position for animation */
  cursor: default; /* Changed from pointer since cards don't expand */
  border: 1px solid rgba(255, 255, 255, 0.05);
}

/* Hover effects now handled by Anime.js */

.iconContainer {
  background-color: rgba(61, 213, 152, 0.15);
  width: 3.5rem;
  height: 3.5rem;
  border-radius: 0.75rem;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1.25rem;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.iconContainer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(61, 213, 152, 0.2), rgba(10, 109, 194, 0.2));
  opacity: 0;
  transition: opacity 0.3s ease;
}

.statCard:hover .iconContainer {
  transform: scale(1.1);
}

.statCard:hover .iconContainer::before {
  opacity: 1;
}

.statIcon {
  width: 1.5rem;
  height: 1.5rem;
  color: #3dd598;
}

.statValue {
  font-size: 3rem;
  font-weight: 700;
  margin-bottom: 0.75rem;
  background: linear-gradient(to right, #3dd598, #0a6dc2);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  color: transparent;
  display: inline-block; /* For animation */
  will-change: transform, opacity; /* Performance optimization */
  position: relative;
  line-height: 1.2;
}

.statValue::after {
  content: '';
  position: absolute;
  bottom: -0.25rem;
  left: 50%;
  transform: translateX(-50%);
  width: 2rem;
  height: 2px;
  background: linear-gradient(to right, #3dd598, #0a6dc2);
  border-radius: 2px;
  opacity: 0.7;
}

.statLabel {
  color: rgba(255, 255, 255, 0.8);
  font-size: 1rem;
  font-weight: 500;
  letter-spacing: 0.01em;
}

.ctaSection {
  margin-top: 4rem;
  text-align: center;
  position: relative;
  padding: 1rem;
}

.ctaAccent {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 200%;
  height: 1px;
  background-color: rgba(255, 255, 255, 0.1);
  transform: translate(-50%, -50%);
}

.ctaButton {
  display: inline-flex;
  align-items: center;
  background-color: rgba(61, 213, 152, 0.1);
  padding: 0.75rem 1.5rem;
  border-radius: 9999px;
  font-weight: 600;
  transition: all 0.3s ease;
  color: rgba(255, 255, 255, 0.9);
  position: relative;
  z-index: 1;
  border: 1px solid rgba(61, 213, 152, 0.3);
}

.ctaButton:hover {
  background-color: rgba(61, 213, 152, 0.2);
  color: white;
}

.ctaButtonIcon {
  width: 1.25rem;
  height: 1.25rem;
  margin-left: 0.5rem;
  transition: transform 0.3s ease;
}

.ctaButton:hover .ctaButtonIcon {
  transform: translateX(0.25rem);
}
