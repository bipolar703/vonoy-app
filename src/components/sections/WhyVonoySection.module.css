.section {
  position: relative;
  background-color: white;
  padding: 4rem 0; /* Reduced padding for mobile */
  overflow: hidden;
  opacity: 1; /* Make visible by default */
  isolation: isolate; /* Create a new stacking context */
}

@media (min-width: 768px) {
  .section {
    padding: 6rem 0; /* Increased padding for desktop */
  }
}

.sectionBg {
  position: absolute;
  inset: 0;
  overflow: hidden;
  z-index: -1;
}

.geometricLines {
  position: absolute;
  inset: 0;
  z-index: 0;
  opacity: 0.05;
  overflow: hidden;
  pointer-events: none;
}

.linesSvg {
  width: 100%;
  height: 100%;
  position: absolute;
}

.geometricLine {
  fill: none;
  stroke: rgb(32 60 91);
  stroke-width: 1;
  stroke-dasharray: 1000;
  stroke-dashoffset: 1000;
  opacity: 0;
}

.glow {
  position: absolute;
  top: -50%;
  left: 20%;
  width: 60%;
  height: 100%;
  background: radial-gradient(
    circle,
    rgba(32, 60, 91, 0.15) 0%,
    rgba(32, 60, 91, 0.08) 50%,
    rgba(255, 255, 255, 0) 70%
  );
  filter: blur(60px);
  transform: rotate(-15deg);
  animation: pulse-subtle 10s infinite alternate ease-in-out;
}

@keyframes pulse-subtle {
  0% {
    opacity: 0.5;
    transform: rotate(-15deg) scale(1);
  }
  100% {
    opacity: 0.8;
    transform: rotate(-12deg) scale(1.1);
  }
}

.container {
  max-width: 1280px; /* Set specific max-width for consistency */
  margin: 0 auto;
  padding: 0 1rem; /* Reduced padding for mobile */
  position: relative;
  z-index: 10;
}

@media (min-width: 768px) {
  .container {
    padding: 0 1.5rem; /* Increased padding for desktop */
  }
}

.sectionHeader {
  text-align: center;
  margin-bottom: 2.5rem; /* Reduced margin for mobile */
}

@media (min-width: 768px) {
  .sectionHeader {
    margin-bottom: 3.5rem; /* Increased margin for desktop */
  }
}

.sectionTitle {
  font-size: 2.25rem; /* Smaller font for mobile */
  font-weight: 800;
  line-height: 1.15;
  color: rgb(32 60 91);
  position: relative;
  display: inline-block;
  margin-bottom: 1rem;
}

@media (min-width: 768px) {
  .sectionTitle {
    font-size: 2.75rem; /* Larger font for desktop */
    margin-bottom: 1.5rem;
  }
}

@media (max-width: 1023px) {
  .sectionTitle {
    font-size: 2.25rem;
  }
}
@media (max-width: 639px) {
  .sectionTitle {
    font-size: 2.5rem;
  }
}

/* .sectionTitle::after {
  content: '';
  position: absolute;
  bottom: -0.75rem;
  left: 50%;
  transform: translateX(-50%);
  width: 4rem;
  height: 0.25rem;
  background: linear-gradient(to right, #3dd598, #0a6dc2);
  border-radius: 9999px;
  box-shadow: 0 0 20px rgba(61, 213, 152, 0.5);
} */

.highlight {
  position: relative;
  display: inline-block;
  z-index: 1;
  color: rgb(32 60 91);
  font-weight: 900;
}

.featuresGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.25rem; /* Reduced gap for mobile */
  align-items: start;
  position: relative;
  z-index: 2;
  margin: 0 auto;
  max-width: 1280px;
}

@media (min-width: 640px) {
  .featuresGrid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 1.5rem;
  }
}

@media (min-width: 1024px) {
  .featuresGrid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: auto auto;
    grid-template-areas:
      'card1 card2 card3'
      '. card4 card5';
    gap: 2rem;
    justify-content: center;
  }

  .card1 {
    grid-area: card1;
  }
  .card2 {
    grid-area: card2;
  }
  .card3 {
    grid-area: card3;
  }
  .card4 {
    grid-area: card4;
  }
  .card5 {
    grid-area: card5;
  }
}

/* Individual card container styling */
:global(.card-container) {
  height: auto;
  display: flex;
  margin-bottom: 0; /* Remove margin, using grid gap instead */
  isolation: isolate;
}

:global(.card-container > div) {
  flex: 1;
  display: flex;
  flex-direction: column;
  width: 100%;
}

.featureCard {
  margin-bottom: 0;
  display: flex;
  flex-direction: column;
  position: relative;
  background: rgba(255, 255, 255, 0.98);
  border: 1.5px solid rgba(32, 60, 91, 0.12); /* Lighter border */
  border-radius: 1rem;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08); /* Subtle modern shadow */
  color: rgb(32 60 91);
  overflow: hidden;
  transition:
    box-shadow 0.4s ease-in-out,
    transform 0.4s ease-in-out,
    border-color 0.4s ease-in-out;
  will-change: transform, box-shadow;
}

/* Remove hover from .featureCard itself */
.featureCard:hover,
.featureCard:focus-within {
  background: rgba(255, 255, 255, 1);
}

/* Move hover effect to the wrapper with modern subtle animations */
:global(.card-container:hover) .featureCard {
  transform: translateY(-5px) scale(1.02); /* More subtle scale */
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.12);
  border-color: rgba(61, 213, 152, 0.15);
  background: rgba(255, 255, 255, 1);
}

.expandedCard {
  background: rgba(255, 255, 255, 1);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.12);
  transform: translateY(-5px);
  border-color: rgba(32, 60, 91, 0.25);
  z-index: 5;
}

/* Mobile responsiveness */
@media (max-width: 639px) {
  .featuresGrid {
    gap: 1.25rem;
  }
}

.featureIcon {
  width: 2.5rem; /* Smaller icon for mobile */
  height: 2.5rem;
  background-color: rgba(32, 60, 91, 0.1);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 1rem;
  color: rgb(32 60 91);
}

@media (min-width: 768px) {
  .featureIcon {
    width: 3rem; /* Larger icon for desktop */
    height: 3rem;
  }
}

/* All styles for title, description, and expand/collapse are now handled by the ExpandableCard component */
