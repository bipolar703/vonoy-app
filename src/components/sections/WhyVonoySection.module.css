.section {
  position: relative;
  background-color: white;
  padding: 6rem 0; /* Increased padding for better spacing */
  overflow: hidden;
  opacity: 1; /* Make visible by default */
  isolation: isolate; /* Create a new stacking context */
}

.sectionBg {
  position: absolute;
  inset: 0;
  overflow: hidden;
  z-index: -1;
}

.geometricLines {
  position: absolute;
  inset: 0;
  z-index: 0;
  opacity: 0.05;
  overflow: hidden;
  pointer-events: none;
}

.linesSvg {
  width: 100%;
  height: 100%;
  position: absolute;
}

.geometricLine {
  fill: none;
  stroke: rgb(32 60 91);
  stroke-width: 1;
  stroke-dasharray: 1000;
  stroke-dashoffset: 1000;
  opacity: 0;
}

/* Grid removed as requested */

.glow {
  position: absolute;
  top: -50%;
  left: 20%;
  width: 60%;
  height: 100%;
  background: radial-gradient(
    circle,
    rgba(32, 60, 91, 0.15) 0%,
    rgba(32, 60, 91, 0.08) 50%,
    rgba(255, 255, 255, 0) 70%
  );
  filter: blur(60px);
  transform: rotate(-15deg);
  animation: pulse-subtle 10s infinite alternate ease-in-out;
}

@keyframes pulse-subtle {
  0% {
    opacity: 0.5;
    transform: rotate(-15deg) scale(1);
  }
  100% {
    opacity: 0.8;
    transform: rotate(-12deg) scale(1.1);
  }
}

.container {
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 1.5rem;
  position: relative;
  z-index: 10;
}

.sectionHeader {
  text-align: center;
  margin-bottom: 3rem; /* Reduced margin for more compact design */
}

.sectionTitle {
  font-size: 2.75rem;
  font-weight: 800;
  line-height: 1.15;
  color: rgb(32 60 91);
  position: relative;
  display: inline-block;
  margin-bottom: 1.5rem;
}

@media (max-width: 1023px) {
  .sectionTitle {
    font-size: 2.25rem;
  }
}
@media (max-width: 639px) {
  .sectionTitle {
    font-size: 1.75rem;
  }
}

/* .sectionTitle::after {
  content: '';
  position: absolute;
  bottom: -0.75rem;
  left: 50%;
  transform: translateX(-50%);
  width: 4rem;
  height: 0.25rem;
  background: linear-gradient(to right, #3dd598, #0a6dc2);
  border-radius: 9999px;
  box-shadow: 0 0 20px rgba(61, 213, 152, 0.5);
} */

.highlight {
  position: relative;
  display: inline-block;
  z-index: 1;
  color: rgb(32 60 91);
  font-weight: 900;
}

.featuresGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.5rem;
  align-items: start;
  position: relative;
  z-index: 2;
  margin: 0 auto;
  max-width: 1200px;
}
@media (min-width: 640px) {
  .featuresGrid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
@media (min-width: 1024px) {
  .featuresGrid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

/* Individual card container styling */
:global(.card-container) {
  height: auto; /* Allow height to adjust based on content */
  display: flex;
  margin-bottom: 1rem; /* Add bottom margin for spacing between cards */
  isolation: isolate; /* Ensure stacking context is isolated */
}

:global(.card-container > div) {
  flex: 1;
  display: flex;
  flex-direction: column;
  width: 100%; /* Ensure full width */
}

.featureCard {
  margin-bottom: 0;
  display: flex;
  flex-direction: column;
  position: relative;
  background: rgba(255, 255, 255, 0.98);
  border: 1.5px solid rgba(32, 60, 91, 0.18);
  border-radius: 1rem;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  color: rgb(32 60 91);
  overflow: hidden;
  transition:
    box-shadow 0.3s,
    transform 0.3s ease,
    height 0.3s ease,
    border-color 0.3s;
  border: 4px solid transparent;
  will-change: transform, box-shadow;
}

/* Remove hover from .featureCard itself */
.featureCard:hover,
.featureCard:focus-within {
  background: rgba(255, 255, 255, 1);
  /* Remove transform and box-shadow here */
}

/* Move hover effect to the wrapper */
:global(.card-container:hover) .featureCard {
  transform: scale(1.05);
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
  border-color: rgba(61, 213, 152, 0.1);
  background: rgba(255, 255, 255, 1);
}

.expandedCard {
  background: rgba(255, 255, 255, 1);
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
  transform: translateY(-5px);
  border-color: rgba(32, 60, 91, 0.25);
  z-index: 5; /* Lower z-index to avoid overshadowing other cards */
}

/* Mobile responsiveness */
@media (max-width: 639px) {
  .featuresGrid {
    gap: 1.5rem;
  }

  .featureCard {
    margin-bottom: 0.5rem;
  }
}

.featureIcon {
  width: 3rem;
  height: 3rem;
  background-color: rgba(32, 60, 91, 0.1);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 1rem;
  color: rgb(32 60 91);
}

/* All styles for title, description, and expand/collapse are now handled by the ExpandableCard component */
