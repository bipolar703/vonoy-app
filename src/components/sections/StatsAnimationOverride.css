/* Override for StatsAnimation to ensure animations work regardless of reduced motion preference */
.force-animation,
.force-animation *,
.force-animation *::before,
.force-animation *::after {
  animation-duration: inherit !important;
  animation-iteration-count: inherit !important;
  transition-duration: inherit !important;
}

/* Ensure the light bulb animation works */
.force-animation .lightBulb {
  animation: floatBulb 4s ease-in-out infinite !important;
}

.force-animation .animateGlowRing {
  animation: ringPulse 3s infinite alternate !important;
}

.force-animation .animateRays {
  animation: rotateRays 15s linear infinite !important;
}

.force-animation .animateInnerGlow {
  animation: innerPulse 3s infinite alternate ease-in-out !important;
}

.force-animation .animatePathTop,
.force-animation .animatePathRight,
.force-animation .animatePathBottom,
.force-animation .animatePathLeft {
  animation: pulsePath 2s infinite alternate !important;
}

.force-animation .animateNode {
  animation: nodePulse 2s infinite alternate !important;
}

.force-animation .animateParticles {
  animation: particleEffect 10s linear infinite !important;
}

.force-animation .dataLine1 {
  animation: dataLine 2s infinite !important;
}

.force-animation .dataLine2 {
  animation: dataLine 2s infinite 0.5s !important;
}

.force-animation .dataLine3 {
  animation: dataLine 2s infinite 1s !important;
}

/* Define keyframes here to ensure they're available */
@keyframes floatBulb {
  0%, 100% { transform: translateY(0) rotate(0deg) scale(1); }
  25% { transform: translateY(-10px) rotate(-2deg) scale(1.02); }
  50% { transform: translateY(0) rotate(0deg) scale(1); }
  75% { transform: translateY(-10px) rotate(2deg) scale(1.02); }
}

@keyframes ringPulse {
  0% { transform: translate(-50%, -50%) scale(1); opacity: 0.6; box-shadow: 0 0 20px rgba(61, 213, 152, 0.3); }
  100% { transform: translate(-50%, -50%) scale(1.5); opacity: 0.9; box-shadow: 0 0 30px rgba(61, 213, 152, 0.5); }
}

@keyframes rotateRays {
  0% { transform: translate(-50%, -50%) rotate(0deg) scale(1); }
  50% { transform: translate(-50%, -50%) rotate(180deg) scale(1.1); }
  100% { transform: translate(-50%, -50%) rotate(360deg) scale(1); }
}

@keyframes innerPulse {
  0% {
    transform: translate(-50%, -50%) scale(0.8);
    opacity: 0.7;
    filter: blur(5px);
  }
  100% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 0.9;
    filter: blur(8px);
  }
}

@keyframes pulsePath {
  0% { opacity: 0.7; box-shadow: 0 0 10px rgba(61, 213, 152, 0.5); }
  100% { opacity: 1; box-shadow: 0 0 20px rgba(61, 213, 152, 0.9); }
}

@keyframes nodePulse {
  0% { transform: scale(1); box-shadow: 0 0 15px rgba(61, 213, 152, 0.8), 0 0 5px rgba(255, 255, 255, 0.8) inset; }
  100% { transform: scale(1.2); box-shadow: 0 0 20px rgba(61, 213, 152, 1), 0 0 8px rgba(255, 255, 255, 1) inset; }
}

@keyframes particleEffect {
  0%, 100% { 
    background-image: 
      radial-gradient(circle at 20% 30%, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0) 3%),
      radial-gradient(circle at 80% 40%, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0) 3%),
      radial-gradient(circle at 40% 80%, rgba(255, 255, 255, 0.6) 0%, rgba(255, 255, 255, 0) 3%),
      radial-gradient(circle at 60% 10%, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 3%);
  }
  50% { 
    background-image: 
      radial-gradient(circle at 70% 80%, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0) 3%),
      radial-gradient(circle at 10% 30%, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0) 3%),
      radial-gradient(circle at 30% 10%, rgba(255, 255, 255, 0.6) 0%, rgba(255, 255, 255, 0) 3%),
      radial-gradient(circle at 90% 60%, rgba(255, 255, 255, 0.5) 0%, rgba(255, 255, 255, 0) 3%);
  }
}

@keyframes dataLine {
  0% { transform: translateX(100%); opacity: 0; }
  20% { opacity: 1; }
  80% { opacity: 1; }
  100% { transform: translateX(0%); opacity: 0; }
}
